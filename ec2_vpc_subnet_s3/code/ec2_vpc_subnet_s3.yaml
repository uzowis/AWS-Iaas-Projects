---
AWSTemplateFormatVersion: "2010-09-09"

Description:
  Provision AWS architecture that has ec2, vpc, s3 and subnet

#METADATA
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups:  # Helps you arrange parameters in groups and orderly manner.
      - 
        Label: 
          default: "Network Configuration"
        Parameters: 
          - CidrBlockVPCParam
          - CidrBlockSubnetParam
      - 
        Label: 
          default: "Amazon EC2 Configuration"
        Parameters: 
          - InstanceTypeParam
          - ImageIdParam
      - 
        Label: 
          default: "S3 Bucket Configuration"
        Parameters: 
          - BuckectNameParam   

    ParameterLabels: # Use custom labels for your parameters instead of the actual parameter name
      CidrBlockVPCParam: 
        default: "What CIDR Block would use for your VPC?"

      BuckectNameParam: 
        default: "Choose a unique name for your s3 bucket"



#PARAMETERS
Parameters: # Here we can have dynamic values/properties which are referenced in other sections of the code.
  InstanceTypeParam: #Logical ID for the instancetype
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.

  BuckectNameParam:
    Type: String
    Description: Enter the bucket name of choice.

  ImageIdParam: 
    Type: String
    Default: ami-0c618421e207909d0
    AllowedValues:
      - ami-0c618421e207909d0
      - ami-0b9932f4918a00c4f
      - ami-0f00a31129b3158a1
    Description: Enter the AMI.

  CidrBlockVPCParam: 
    Type: String
    Default: 10.0.0.0/16
    AllowedValues:
      - 10.0.0.0/16
      - 10.0.0.0/24
      - 10.0.0.0/32
    Description: Enter the CidrBlock for your VPC.

  CidrBlockSubnetParam: 
    Type: String
    Default: 10.0.1.0/24
    AllowedValues:
      - 10.0.1.0/16
      - 10.0.1.0/24
      - 10.0.1.0/32
    Description: Enter the CidrBlock for your Subnet.



#RESOURCES
Resources: # Resources to be provisioned when we create/deploy cloudformation stack
  demoS3Bucket: #Logical ID
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BuckectNameParam
      Tags: 
        - Key : Project
          Value : IaasProject
     
  demoEC2Instance: #Logical ID for my EC2 Instance
    Type: AWS::EC2::Instance
    Properties:
      ImageId : !Ref ImageIdParam
      InstanceType : !Ref InstanceTypeParam
      Tags: 
        - Key : project
          Value : Demo Project

  demoVPC: #Logical ID for my VPC
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CidrBlockVPCParam
      EnableDnsHostnames: True
      EnableDnsSupport: True
      Tags: 
        - Key : project
          Value : Demo Project

  demoSubnet: #Logical ID for demoVPC Subnet
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref CidrBlockSubnetParam
      VpcId: !Ref demoVPC
      Tags: 
        - Key : project
          Value : Demo Project
  



